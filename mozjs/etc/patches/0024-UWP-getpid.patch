diff --git a/js/src/util/GetPidProvider.h b/js/src/util/GetPidProvider.h
index ca00c5bca1..13cd39ead9 100644
--- a/js/src/util/GetPidProvider.h
+++ b/js/src/util/GetPidProvider.h
@@ -8,8 +8,13 @@
 #define util_GetPidProvider_h
 
 #ifdef XP_WIN
-#  include <process.h>
-#  define getpid _getpid
+#  ifdef JS_ENABLE_UWP
+#    include <processthreadsapi.h>
+#    define getpid GetCurrentProcessId
+#  else
+#    include <process.h>
+#    define getpid _getpid
+#  endif
 #else
 #  include <unistd.h>
 #endif
diff --git a/js/src/vm/DateTime.cpp b/js/src/vm/DateTime.cpp
index a86a6e9f71..3ee5dcc259 100644
--- a/js/src/vm/DateTime.cpp
+++ b/js/src/vm/DateTime.cpp
@@ -42,7 +42,9 @@ static bool ComputeLocalTime(time_t local, struct tm* ptm) {
   // zone changes are correctly picked up.
 
 #if defined(_WIN32)
+#ifndef JS_ENABLE_UWP
   _tzset();
+#endif
   return localtime_s(ptm, &local) == 0;
 #elif defined(HAVE_LOCALTIME_R)
 #  ifndef __wasi__
diff --git a/mfbt/RandomNum.cpp b/mfbt/RandomNum.cpp
index 773e00f880..d425481d95 100644
--- a/mfbt/RandomNum.cpp
+++ b/mfbt/RandomNum.cpp
@@ -97,7 +97,11 @@ MFBT_API bool GenerateRandomBytesFromOS(void* aBuffer, size_t aLength) {
 
 #if defined(XP_WIN)
 
+#ifdef JS_ENABLE_UWP
+  return BCryptGenRandom(nullptr, reinterpret_cast<PUCHAR>(aBuffer), aLength, BCRYPT_USE_SYSTEM_PREFERRED_RNG) == STATUS_SUCCESS;
+#else
   return !!RtlGenRandom(aBuffer, aLength);
+#endif
 
 #elif defined(USE_ARC4RANDOM)  // defined(XP_WIN)
 
diff --git a/mozglue/baseprofiler/core/ProfilerUtils.cpp b/mozglue/baseprofiler/core/ProfilerUtils.cpp
index 5f53910774..eacbf32e1b 100644
--- a/mozglue/baseprofiler/core/ProfilerUtils.cpp
+++ b/mozglue/baseprofiler/core/ProfilerUtils.cpp
@@ -31,13 +31,18 @@
 // --------------------------------------------- Windows process & thread ids
 #elif defined(XP_WIN)

-#  include <process.h>
 #  include <processthreadsapi.h>
+#ifdef JS_ENABLE_UWP
+#  define getpid GetCurrentProcessId
+#else
+#  include <process.h>
+#  define getpid _getpid
+#endif

 namespace mozilla::baseprofiler {

 BaseProfilerProcessId profiler_current_process_id() {
-  return BaseProfilerProcessId::FromNativeId(_getpid());
+  return BaseProfilerProcessId::FromNativeId(getpid());
 }

 BaseProfilerThreadId profiler_current_thread_id() {
diff --git a/mozglue/misc/moz.build b/mozglue/misc/moz.build
index 4bb8f5a110..6a2316db5e 100644
--- a/mozglue/misc/moz.build
+++ b/mozglue/misc/moz.build
@@ -32,7 +32,6 @@ EXPORTS.mozilla.glue += [
 
 if CONFIG["OS_ARCH"] == "WINNT":
     EXPORTS.mozilla += [
-        "GetKnownFolderPath.h",
         "StackWalk_windows.h",
         "StackWalkThread.h",
         "TimeStamp_windows.h",
@@ -75,7 +75,6 @@ if CONFIG["OS_ARCH"] == "WINNT":
         "ImportDir.h",
         "MozProcessMitigationDynamicCodePolicy.h",
         "NativeNt.h",
-        "WindowsDpiInitialization.h",
         "WindowsEnumProcessModules.h",
         "WindowsMapRemoteView.h",
         "WindowsProcessMitigations.h",
@@ -85,10 +84,8 @@ if CONFIG["OS_ARCH"] == "WINNT":
         "WindowsUnicode.h",
     ]
     SOURCES += [
-        "GetKnownFolderPath.cpp",
         "TimeStamp_windows.cpp",
         "WindowsDllMain.cpp",
-        "WindowsDpiInitialization.cpp",
         "WindowsMapRemoteView.cpp",
         "WindowsProcessMitigations.cpp",
         "WindowsUnicode.cpp",
diff --git a/mozglue/misc/StackWalk.cpp b/mozglue/misc/StackWalk.cpp
index 720e90e544..287a44c087 100644
--- a/mozglue/misc/StackWalk.cpp
+++ b/mozglue/misc/StackWalk.cpp
@@ -574,7 +574,6 @@ static bool EnsureSymInitialized() {
   return retStat;
 }
 
-#ifndef JS_ENABLE_UWP
 MFBT_API bool MozDescribeCodeAddress(void* aPC,
                                      MozCodeAddressDetails* aDetails) {
   aDetails->library[0] = '\0';
@@ -584,6 +583,9 @@ MFBT_API bool MozDescribeCodeAddress(void* aPC,
   aDetails->function[0] = '\0';
   aDetails->foffset = 0;
 
+#ifdef JS_ENABLE_UWP
+  return true;
+#else
   if (!EnsureSymInitialized()) {
     return false;
   }
@@ -637,8 +639,8 @@ MFBT_API bool MozDescribeCodeAddress(void* aPC,
 
   LeaveCriticalSection(&gDbgHelpCS);  // release our lock
   return true;
-}
 #endif
+}
 
 // i386 or PPC Linux stackwalking code
 #elif HAVE_DLADDR &&                                           \
