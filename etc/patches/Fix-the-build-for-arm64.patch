From 13f2e48ace4ef69e1904f3c43542622ff403fc60 Mon Sep 17 00:00:00 2001
From: Lars T Hansen <lhansen@mozilla.com>
Date: Tue, 12 Jul 2016 13:51:15 +0200
Subject: Bug 1284824 - Fix the build for arm64


diff --git a/mozjs/js/src/asmjs/WasmBaselineCompile.cpp b/mozjs/js/src/asmjs/WasmBaselineCompile.cpp
index 8db62f6..e222b63 100644
--- a/mozjs/js/src/asmjs/WasmBaselineCompile.cpp
+++ b/mozjs/js/src/asmjs/WasmBaselineCompile.cpp
@@ -156,6 +156,13 @@ typedef bool HandleNaNSpecially;
 // prevent this workaround from having any consequence.  This hack
 // exists only as a stopgap; there is no ARM64 JIT support yet.
 static const Register StackPointer = RealStackPointer;
+#endif
+
+#if defined(JS_CODEGEN_ARM64) || (!defined(JS_CODEGEN_X64) && defined(JS_PUNBOX64))
+
+#if !defined(JS_CODEGEN_ARM64)
+static Register DummyScratchReg; // Doesn't matter
+#endif
 
 // FIXME: This should somehow use vixl::UseScratchRegisterScope, or we
 // should define our own scratch register independent of the masm.
@@ -163,7 +170,7 @@ class ScratchRegisterScope
 {
   public:
     ScratchRegisterScope(MacroAssembler& masm) {}
-    operator Register() const { return ScratchReg; }
+    operator Register() const { return DummyScratchReg; }
 };
 #endif
 
-- 
1.9.1

