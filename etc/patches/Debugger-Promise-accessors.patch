
# HG changeset patch
# User Till Schneidereit <till@tillschneidereit.net>
# Date 1467417647 -7200
# Node ID 9501d1e10aa7c40d7db39d85a041f8d5fe982370
# Parent  639184c289f5a56a94c3b1299b566ebcb5340c63
Bug 911216 - Part 25: Fix Promise accessors on Debugger.Object.prototype. r=ejpbruel

diff --git a/js/src/vm/Debugger.cpp b/js/src/vm/Debugger.cpp
--- a/js/src/vm/Debugger.cpp
+++ b/js/src/vm/Debugger.cpp
@@ -8251,18 +8251,21 @@ DebuggerObject_getPromiseTimeToResolutio
 }
 
 static bool
 DebuggerObject_getPromiseAllocationSite(JSContext* cx, unsigned argc, Value* vp)
 {
     THIS_DEBUGOBJECT_PROMISE(cx, argc, vp, "get promiseAllocationSite", args, refobj);
 
     RootedObject allocSite(cx, promise->allocationSite());
-    if (!allocSite)
-        return null(args);
+    if (!allocSite) {
+        args.rval().setNull();
+        return true;
+    }
+
     if (!cx->compartment()->wrap(cx, &allocSite))
         return false;
     args.rval().set(ObjectValue(*allocSite));
     return true;
 }
 
 static bool
 DebuggerObject_getPromiseResolutionSite(JSContext* cx, unsigned argc, Value* vp)
@@ -8270,18 +8273,21 @@ DebuggerObject_getPromiseResolutionSite(
     THIS_DEBUGOBJECT_PROMISE(cx, argc, vp, "get promiseResolutionSite", args, refobj);
 
     if (promise->state() == JS::PromiseState::Pending) {
         JS_ReportErrorNumber(cx, GetErrorMessage, nullptr, JSMSG_DEBUG_PROMISE_NOT_RESOLVED);
         return false;
     }
 
     RootedObject resolutionSite(cx, promise->resolutionSite());
-    if (!resolutionSite)
-        return null(args);
+    if (!resolutionSite) {
+        args.rval().setNull();
+        return true;
+    }
+
     if (!cx->compartment()->wrap(cx, &resolutionSite))
         return false;
     args.rval().set(ObjectValue(*resolutionSite));
     return true;
 }
 
 static bool
 DebuggerObject_getPromiseID(JSContext* cx, unsigned argc, Value* vp)

